---
title: "Lines in the Smog"
description: "Pollution isn't evenly shared. Here's who gets the worst of it."
toc: true
draft: FALSE
filters:
  - shinylive
---

![](images/air_quality_pollution_particles_social.jpg)
Image from [Science Journal for Kids and Teens](https://www.sciencejournalforkids.org/articles/how-does-air-pollution-affect-people-differently/)

## Take a breath...

When we consider "fresh air," it's almost intuitive to us where the freshest air will be. In the countryside, by the coast, in the forest. Conversely, air pollution is often associated with urbanization and industry, smog settling over smokestacks in the city and bumper-to-bumper traffic coughing out fumes from thousands of tailpipes. Part of what makes up air pollution are tiny particles like soot. When these particles are below a certain size, they are categorized as particulate matter 2.5 (PM2.5). PM2.5 can cause respiratory illnesses like asthma or cardiac issues including irregular heartbeat and cardiac arrest.

So who is breathing this stuff? This project focused on air quality data collected throughout 2020 at stations around the East coast of the United States, with a particular focus on larger cities. Stations were located in Boston, New York City, Jersey City, and Philadelphia, among other places. 

Using data from the 2020 census, we created "neighborhoods"  to find out who was living near each monitoring station. 

Then, we compared the amount of particulate matter in the air over time in each neighborhood, giving us insight into the types of people experiencing exposure to this air pollutant. 

## Who's got it the worst?

Across all the neighborhoods we looked at on the East coast, areas with higher populations of Black and Asian residents experienced **more particulate matter exposure** than those with higher concentrations of white residents. This is [consistent](https://www.nytimes.com/2021/04/28/climate/air-pollution-minorities.html) with other studies around the country. This project focused in particular in urban areas, where pollution mainly stems from **transportation**, [particularly cars](https://www.cleanairfund.org/theme/cities/#:~:text=by%20weather%20conditions.-,Traffic%20is%20a%20huge%20source%20of%20urban%20air%20pollution,half%20of%20emissions%20in%20cities.) which can contribute up to half of a city's emissions alone!


So why do Black and Asian populations experience the most exposure to PM2.5? Well, [recent research](https://www.sciencedirect.com/science/article/pii/S1361920923003620) demonstrates that lower income neighborhoods, often dominated by minority populations, are frequently **closer to roadways** than more affluent, mostly white neighborhoods. Higher income neighborhoods also often have better infrastructure for cleaner transportation (e.g. bike lanes, train access), and more green spaces like parks that can improve air quality overall.


Try the interactive map below to explore air quality around the coast.

---


### Explore air pollution around the coast

```{r echo=FALSE}
#| message: false
#| warning: false
library(shiny)
library(leaflet)
library(plotly)
library(DT)
library(tidyverse)

# Convert RDS to CSV if it doesn't exist
if (!file.exists("simpson_pm.csv")) {
  if (file.exists("simpson_pm.rds")) {
    simpson_data <- readRDS("~/Desktop/Girish Folders/Boston University Classes/bu semester 8/CASMA415/Project Elegant Scientists/dataset/simpson_pm.rds")
    write.csv(simpson_data, "simpson_pm.csv", row.names = FALSE)
  } else {
  
  }
}

# UI (unchanged)
ui <- fluidPage(
  titlePanel("Massachusetts Air Quality and Demographic Explorer"),
  sidebarLayout(
    sidebarPanel(
      selectInput("site", "Select Monitoring Site:", 
                  choices = c("All", unique(read.csv("simpson_pm.csv")$site_name))),
      dateRangeInput("dates", "Date Range:",
                     start = min(read.csv("simpson_pm.csv")$date),
                     end = max(read.csv("simpson_pm.csv")$date)),
      selectInput("metric", "Air Quality Metric:",
                  choices = c("PM2.5 Daily Mean" = "pm2.5_dailymean",
                              "Air Quality Index" = "aqi")),
      checkboxGroupInput("demographics", "Show Demographic Variables:",
                         choices = c("Race Proportions", "Income", "Poverty Rate", "Diversity Index"),
                         selected = "Diversity Index"),
      actionButton("update", "Update View")
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Map", leafletOutput("map", height = "600px")),
        tabPanel("Time Series", plotlyOutput("timeseries")),
        tabPanel("Demographic Correlations", 
                 plotlyOutput("correlation_plot"),
                 DTOutput("stats_table")),
        tabPanel("Data Explorer", DTOutput("data_table"))
      )
    )
  )
)

# Server
server <- function(input, output, session) {
  
  # Load and preprocess data
  simpson_pm <- reactive({
    # Read and clean the dataset
    df <- read.csv("simpson_pm.csv") %>%
      mutate(date = as.Date(date),
             neighborhood = as.factor(neighborhood),
             site_name = as.factor(site_name))
    
    # Filter based on user inputs
    if (input$site != "All") {
      df <- df %>% filter(site_name == input$site)
    }
    
    df %>% filter(date >= input$dates[1] & date <= input$dates[2])
  })
  
  # Interactive map
  output$map <- renderLeaflet({
    df <- simpson_pm() %>%
      group_by(site_name, lat, long) %>%
      summarise(avg_pm = mean(pm2.5_dailymean, na.rm = TRUE),
                avg_aqi = mean(aqi, na.rm = TRUE),
                .groups = "drop")
    
    leaflet(df) %>%
      addTiles() %>%
      addCircleMarkers(
        lng = ~long, lat = ~lat,
        radius = ~ifelse(input$metric == "pm2.5_dailymean", 
                         scales::rescale(avg_pm, to = c(5, 20)), 
                         scales::rescale(avg_aqi, to = c(5, 20))),
        color = ~ifelse(input$metric == "pm2.5_dailymean",
                        colorNumeric("YlOrRd", avg_pm)(avg_pm),
                        colorNumeric("YlOrRd", avg_aqi)(avg_aqi)),
        stroke = FALSE, fillOpacity = 0.8,
        popup = ~paste0("<b>", site_name, "</b><br>",
                        "Avg PM2.5: ", round(avg_pm, 2), " µg/m³<br>",
                        "Avg AQI: ", round(avg_aqi, 1))
      ) %>%
      addLegend(pal = colorNumeric("YlOrRd", 
                                  if(input$metric == "pm2.5_dailymean") df$avg_pm else df$avg_aqi),
                values = if(input$metric == "pm2.5_dailymean") df$avg_pm else df$avg_aqi,
                title = if(input$metric == "pm2.5_dailymean") "PM2.5 (µg/m³)" else "AQI",
                opacity = 1)
  })
  
  # Time series plot
  output$timeseries <- renderPlotly({
    df <- simpson_pm() %>%
      group_by(date, site_name) %>%
      summarise(metric_value = mean(get(input$metric), na.rm = TRUE),
                .groups = "drop")
    
    p <- ggplot(df, aes(x = date, y = metric_value, color = site_name)) +
      geom_line() +
      geom_point() +
      labs(x = "Date", y = ifelse(input$metric == "pm2.5_dailymean", 
                                  "PM2.5 (µg/m³)", "Air Quality Index"),
           color = "Site") +
      theme_minimal()
    
    ggplotly(p)
  })
  
  # Correlation plot
  output$correlation_plot <- renderPlotly({
    req(input$demographics)
    
    # Dynamically select columns based on input$demographics
    selected_cols <- c(input$metric)
    if ("Race Proportions" %in% input$demographics) {
      selected_cols <- c(selected_cols, starts_with("pct_"))
    }
    if ("Income" %in% input$demographics) {
      selected_cols <- c(selected_cols, "median_incomeE")
    }
    if ("Poverty Rate" %in% input$demographics) {
      selected_cols <- c(selected_cols, "pct_poverty")
    }
    if ("Diversity Index" %in% input$demographics) {
      selected_cols <- c(selected_cols, "simpson_diversity")
    }
    
    df <- simpson_pm() %>%
      select(all_of(selected_cols)) %>%
      na.omit()
    
    if (ncol(df) < 2) return(NULL)
    
    # Create correlation matrix
    cor_matrix <- cor(df)
    
    # Plot
    plot_ly(
      x = colnames(cor_matrix),
      y = colnames(cor_matrix),
      z = cor_matrix,
      type = "heatmap",
      colors = colorRamp(c("blue", "white", "red"))
    ) %>%
      layout(title = "Correlation Matrix",
             xaxis = list(title = ""),
             yaxis = list(title = ""))
  })
  
  # Summary statistics table
  output$stats_table <- renderDT({
    # Dynamically select columns based on input$demographics
    selected_cols <- c("site_name", input$metric)
    if ("Race Proportions" %in% input$demographics) {
      selected_cols <- c(selected_cols, starts_with("pct_"))
    }
    if ("Income" %in% input$demographics) {
      selected_cols <- c(selected_cols, "median_incomeE")
    }
    if ("Poverty Rate" %in% input$demographics) {
      selected_cols <- c(selected_cols, "pct_poverty")
    }
    if ("Diversity Index" %in% input$demographics) {
      selected_cols <- c(selected_cols, "simpson_diversity")
    }
    
    df <- simpson_pm() %>%
      select(all_of(selected_cols)) %>%
      group_by(site_name) %>%
      summarise(across(where(is.numeric), 
                       list(mean = ~mean(., na.rm = TRUE), 
                            sd = ~sd(., na.rm = TRUE)),
                       .names = "{.col}_{.fn}"))
    
    datatable(df, options = list(scrollX = TRUE))
  })
  
  # Data explorer table
  output$data_table <- renderDT({
    datatable(simpson_pm(), 
              options = list(scrollX = TRUE, pageLength = 10))
  })
}

# Run the app
shinyApp(ui, server)

```

This comes from the file `big_picture.qmd`.

