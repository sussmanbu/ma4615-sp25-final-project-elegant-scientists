---
title: Data
description: We describe the sources of our data and the cleaning process.
toc: true
draft: false
---

![](images/air_sensor.png)

## Air Quality Data

For this project, we combined data from the [EPA AirNow](https://www.epa.gov/outdoor-air-quality-data/download-daily-data) database with US Census data obtained using the **tidycensus** package. We were interested in how air quality metrics -- specifically PM2.5 -- changed by location. Trends in air quality by neighborhood could give us insight into air pollution exposure by race across the East Coast.

Originally, we had chosen three sited in Boston. however, to improve our investigation, we obtained additional sites in Massachusetts, New York, Pennsylvania, New Jersey, Delaware, and Maryland.

The locations of each EPA air quality monitoring station is shown below:
```{r, echo=FALSE, out.width="100%"}

knitr::include_graphics(c(

  "~/Desktop/Girish Folders/Boston University Classes/Bu semester 8/CASMA415/Project Elegant Scientists/images/msp of stations.png",

  "~/Desktop/Girish Folders/Boston University Classes/Bu semester 8/CASMA415/Project Elegant Scientists/images/bos.png",

  "~/Desktop/Girish Folders/Boston University Classes/Bu semester 8/CASMA415/Project Elegant Scientists/images/map of the stations NYc.png",

  "~/Desktop/Girish Folders/Boston University Classes/Bu semester 8/CASMA415/Project Elegant Scientists/images/phili.png"

))

```

Figure 1. Distribution of all EPA PM2.5 monitoring stations across the northeastern United States, including Massachusetts, New York, New Jersey, Pennsylvania, and Delaware.

Figure 2. Boston-area air quality monitoring sites. Stations are located in key neighborhoods including Fenway-Kenmore, South Boston, and Roxbury.

Figure 3. PM2.5 monitoring stations across Manhattan, New York City. Locations include Harlem, Upper East Side, Lower Manhattan, and Central Park vicinity.

Figure 4. Monitoring stations across the Philadelphia metropolitan area, including sites in West Philly, South Jersey suburbs (e.g., Camden, Cherry Hill), and northern Delaware (Wilmington, Newark).

Each state's data was downloaded for all of 2020 seperately, and had to be joined together in the [load_and_clean_air_qual](here::here(/scripts/load_and_clean_air_qual.R)) file. The columns of interest included:

* Date: Allowws for trends in air quality parameters over time
* State: To distinguish groups
* GEOID: Location associated with each monitor, for combinging datasets later
* Daily Mean PM2.5: Air quality measurement of particulate matter
* AQI: Overall daily Air Quality Index, includes other parameters
* Units: for consistency, (µg/m³)
* Site Name
* Side ID
* Site Latitude and Longitude: For location needs

Notably in the data, the distribution of Daily Mean PM2.5 is right skewed. This is frequent in air quality data, as most days have generally low concentrations of particulate matter at a wide geographic scale.

```{r, echo=FALSE}
library(tidyverse)

dataset <- read_rds(file = here::here("dataset/air_qual_census.rds"))

pm2.5_dist <- ggplot(dataset, aes(x = pm2.5_dailymean)) +
  geom_histogram(bins = 30, fill = "steelblue", color = "black") +
  labs(title = "Distribution of PM2.5 Daily Mean") +
  theme_minimal()
pm2.5_dist
```

It should also be mentioned that any readings of PM2.5 **below zero** were considered within the error range of the instrumentation, and **set to zero** for this analysis.

## Census Data

Getting appropriate census data was more complicated. First, we needed to identify the appropriate census tracts surrounding each monitoring site. This was done in the [identify_tracts](here::here(scripts/identify_tracts.R)) file.

According to the EPA, most air quality monitoring sites have a "neighborhood scale" radius, representing a spatial range from **0.5** km to **4 km**. Using the minimum range value (0.5 km) we attempted to identify a buffer zone around each monitoring site based on unique latitude and longitude.

This included using the sf library and a unit transformation to meters.

```{r eval=FALSE}
#| message: false
#| warning: false
library(tidyverse)
library(sf)
library(tidycensus)

# Census API was included here

air_data <- read_rds(file = here::here("dataset", "air_qual_clean.rds"))

# identify individual site points
site_points <- air_data |>
  select(site_id, site_name, state, lat, long) |>
  distinct()

# reproject map points as sf features
site_sf <- st_as_sf(site_points, coords = c("long", "lat"), crs = 4326)
site_proj <- st_transform(site_sf, crs = 3857) # meters

# use census tracts to get 0.5 km intersecting buffer
site_buffers <- st_buffer(site_proj, dist = 500)

```

Once buffers were established, the intersecting tracts were extracted from the ACS using the **tidycensus** package and were joined to the dataframe, creating the new variable **neighborhood** with the naming convention "state_#" based on the monitoring site it intersects.

```{r eval=FALSE}
#| message: false
#| warning: false
unique_states <- unique(site_points$state)

tracts <- map_dfr(unique_states, ~ get_acs(
  geography = "tract",
  variables = "B01003_001",  
  state = .x,
  geometry = TRUE,
  year = 2020
))

tracts_proj <- st_transform(tracts, crs = 3857)

tracts_joined <- st_join(tracts_proj, site_buffers, join = st_intersects, left = FALSE)
tracts_named <- tracts_joined |>
  group_by(state, site_id) |>
  mutate(neighborhood = paste0(tolower(state), "_", row_number())) |>
  ungroup()
air_qual_tracts <- tracts_named |>
  select(site_id, GEOID, NAME, estimate, neighborhood)

write_rds(air_qual_tracts, file = here::here("dataset", "intersect_tracts.rds"))

```

Then, using the intersecting tracts identified, census data could be extracted in [load_clean_census.R](here::here(/load_clean_census.R)).

Population characteristics and socioeconomic variables of interest were identified as:

* Total Population
* Race Counts (White, Black, Asian, Pacific Islander, Other, Two or More)
* Hispanic or Not Hispanic
* Median Income
* Income Below Poverty

Count variables were also used to calculate population percentages.

## Combining datasets

Finally, in the [clean_data.R](here:here(/scripts/clean_data.R)) file, the census data, air quality data, neighborhood information (**tracts** df) were all combined. To simplify data structure, geometry was removed from the large data frame.

```{r eval=FALSE}
#| message: false
#| warning: false
library(tidyverse)

race_vars <- c(
  "total_pop", "white", "black", "native", "asian", "pacific",
  "other_race", "two_or_more", "hispanic", "not_hispanic"
)
pct_race <- c(
  "pct_white", "pct_black", "pct_native", "pct_asian", "pct_pacific",
  "pct_other_race", "pct_two_or_more", "pct_hispanic", "pct_not_hispanic"
)

tracts <- read_rds(file = here::here("dataset", "intersect_tracts.rds"))

air_qual_data <- read_rds(file = here::here("dataset", "air_qual_clean.rds")) |>
  group_by(month)|>
  summarize(across())

census_data <- read_rds(file = here::here("dataset", "census_data.rds")) |> 
  rename(GEOID = FIPS)

tracts_joined <- tracts |> 
  left_join(census_data, by = "GEOID")

data_combined <- air_qual_data |>
  group_by(site_name, month) |>
  left_join(tracts_joined, by = "site_id") |>
  select(-NAME,-method_code,-method_desc,-units,-geometry)

write_rds(data_combined, file = here::here("dataset", "air_qual_census.rds"))
write_rds(tracts_joined, file = here::here("dataset", "census_neighborhood.rds"))

```

Population distributions for each neighborhood within the states of interest are shown below.

![](images/site_demographics.png)

This comes from the file `data.qmd`.

